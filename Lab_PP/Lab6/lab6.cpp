/*************************************************************
	Практическое занятие №5. Структуры
//динамический массив структур
//поиск
//сортировка
//сохранение в файле
//чтение из файла
*************************************************************/
#include <tchar.h>
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <string>
#include "Book.h"
#include "Sort.h"


#define	  stop __asm nop	

// Не делать! совместный ввод и обработку. не удаляем строки из памяти!

//Нужно: Отдельная функция для ввода и вывода int cmd; scanf() return cmd;
//while (c = menu())
//{
//
//}
//Book->book.h; book.cpp;
//динамический массив книжек.book - capacity(объём); количество N;
//лучше массив указателей->на к2аждую книгу свой указатель;
//struct cart1 //картотека
//{
//	Book *pb;
//	int Capacity, N
//}



int _tmain()
{
	setlocale(LC_ALL, "Russian");
	//Используйте структуру BOOK, созданную в предыдущей работе.
	//Для этого достаточно переписать и подключить к проекту файлы
	//book.h и book.cpp


	//Упрощения:
	//1. пусть автор и заглавие книги состоят из одного слова
	//2. все строки можно задавать латинскими буквами. Если хочется
	//   не только выводить, но и вводить русские символы, следует
	//   а) пользоваться расширенными функциями ввода/вывода - wprintf(), wscanf()
	//   б) хранить строки как расширенные - wchar_t
	//   в) установить кодировку - setlocale(LC_CTYPE, ".866");


	//Задание 1. Создаем «картотеку».
	//«Картотека» - это массив структур => нужно такой массив создать.
	//Замечание: размер массива придется увеличиватьпо мере добавления книг =>
	//каким должен быть такой массив???

	cartoteca Cart = {0};
	// Заполняем 6 книг в каталоге
	avtofilling(Cart);
	offsetfilling(Cart);
	


	//Пользователь должен иметь возможность по своему желанию выполнять
	//разные действия с картотекой => нужно такую возможность ему
	//предоставить: это может выглядеть как вывод "меню" (перечень
	//возможных действий и соответствующих реакций пользователя), например:
	//Распечатать содержимое картотеки (1)
	//Ввести новую книгу (2)
	//Удалить существующую(ие) (3)
	//Записать текущее содержимое картотеки в файл (4)
	//Считать из файла содержимое в картотеку (5)
	//...
	//Выход из программы (...)
	typedef void(*pFmenu)(cartoteca& cart);
	pFmenu arFmenu[] = { displayCart, fillingCart, deleteCart, filerecord, fileread, sortCart };
	int c=1;
	while (c = menu())
	{
		arFmenu[c - 1](Cart);
	}

	//Реализуйте посредством функций разные возможности работы с картотекой




	//Подсказка: для файлового ввода/вывода используйте функции fprintf и fscanf
	//(заголовочный файл <cstdio>








	//****************************************************************
	//Задание 2. Предоставьте пользователю возможность выводить перечень книг
	//в определенном порядке => напишите функцию (функции) сортировки массива
	//по любому из полей структуры.
	//Замечание: признак - "по какому полю сортируем" можно ввести с помощью
	//перечисления.
	for (int i = 0; i < Cart.N; i++)
	{
		delete Cart.pb[i];
		Cart.pb[i] = nullptr;
	}
	delete[] Cart.pb;
	Cart.pb = nullptr;
	return 0;
}